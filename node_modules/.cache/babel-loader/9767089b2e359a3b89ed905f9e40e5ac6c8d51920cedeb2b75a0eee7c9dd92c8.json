{"ast":null,"code":"var _jsxFileName = \"D:\\\\site\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport \"./styles/app.css\";\nimport PostList from './components/PostList';\nimport PostForm from './components/PostForm';\nimport Login from './components/Login';\nimport MyButton from './components/UI/button/mybutton.jsx';\nimport \"./css/bootstrap.min.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [donePosts, setDonePosts] = useState([]);\n  const [user, setUser] = useState({\n    login: '',\n    password: \"\"\n  });\n  const [islogin, setLogin] = useState(JSON.parse(localStorage.getItem('boollog:')) | false);\n  const [isPopupOpen, setPopupOpen] = useState(false);\n  useEffect(() => {\n    setUser(JSON.parse(localStorage.getItem('lastuser:')));\n    const stringuser = localStorage.getItem('lastuser:');\n    if (stringuser) {\n      const user = JSON.parse(stringuser);\n      getPosts(user);\n    }\n  }, []);\n  const getPosts = returneduser => {\n    let SavedPosts = null;\n    if (returneduser) SavedPosts = localStorage.getItem(JSON.stringify(returneduser)); // берем элемент из стораж\n    if (SavedPosts) {\n      const PostsArray = JSON.parse(SavedPosts);\n      var donePosts = [];\n      var posts = [];\n      for (let i = 0; i < PostsArray.length; i++) {\n        if (PostsArray[i].completed) {\n          donePosts.add(PostsArray[i]);\n          createPost(PostsArray[i], donePosts);\n          console.log(PostsArray[i]);\n        } else createPost(PostsArray[i], posts);\n      }\n      setPosts(JSON.parse(SavedPosts)); // парсим в строку все объекты\n    } else setPosts([]);\n  };\n  const savePosts = posts => {\n    if (user) localStorage.setItem(JSON.stringify(user), JSON.stringify(posts)); // кладем элемент в стораж\n  };\n\n  const createPost = (newPost, posts) => {\n    if (newPost.title !== '') {\n      setPosts([...posts, newPost]); // задаем все элементы\n      savePosts([...posts, newPost]); // сохраняем все и последний\n    }\n\n    console.log(posts);\n  };\n  const removePost = (post, curPosts) => {\n    setPosts(curPosts.filter(p => p.id !== post.id)); // задаем\n    savePosts(curPosts.filter(p => p.id !== post.id)); // сохраняем\n    console.log(curPosts);\n  };\n  const WrongPassword = () => {\n    alert('Неправильный пароль');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [!isPopupOpen ? /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => setPopupOpen(true),\n        children: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u043A\\u043D\\u043E \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => setPopupOpen(false),\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u043A\\u043D\\u043E \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Login, {\n        L: islogin,\n        SL: setLogin,\n        AccessAllowed: getPosts,\n        AccessRestricted: WrongPassword,\n        onLogin: user => setUser(user),\n        isOpen: isPopupOpen,\n        onClose: () => setPopupOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost,\n        posts: posts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontFamily: 'cursive',\n          textAlign: 'center'\n        },\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u0435\\u043B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-6\",\n        children: /*?*/posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n          add: setDonePosts,\n          remove: removePost,\n          posts: posts,\n          create: createPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-6\",\n        children: /*?*/posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n          add: setPosts,\n          remove: removePost,\n          posts: donePosts,\n          create: createPost\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"oScorSZNP1pdUOEtg2yWCkTA0Xo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PostList","PostForm","Login","MyButton","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","posts","setPosts","donePosts","setDonePosts","user","setUser","login","password","islogin","setLogin","JSON","parse","localStorage","getItem","isPopupOpen","setPopupOpen","stringuser","getPosts","returneduser","SavedPosts","stringify","PostsArray","i","length","completed","add","createPost","console","log","savePosts","setItem","newPost","title","removePost","post","curPosts","filter","p","id","WrongPassword","alert","class","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","L","SL","AccessAllowed","AccessRestricted","onLogin","isOpen","onClose","create","style","fontFamily","textAlign","remove","_c","$RefreshReg$"],"sources":["D:/site/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport \"./styles/app.css\"\r\nimport PostList from './components/PostList';\r\nimport PostForm from './components/PostForm';\r\nimport Login from './components/Login';\r\nimport MyButton from './components/UI/button/mybutton.jsx';\r\nimport \"./css/bootstrap.min.css\"\r\n\r\nfunction App() {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [donePosts, setDonePosts] = useState([]);\r\n\r\n    const [user, setUser] = useState({ login: '', password: \"\" });\r\n    const [islogin, setLogin] = useState(JSON.parse(localStorage.getItem('boollog:')) | false);\r\n    const [isPopupOpen, setPopupOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setUser(JSON.parse(localStorage.getItem('lastuser:')));\r\n        const stringuser = localStorage.getItem('lastuser:');\r\n        if (stringuser) {\r\n            const user = JSON.parse(stringuser);\r\n            getPosts(user);\r\n        }\r\n    }, []);\r\n\r\n    const getPosts = (returneduser) => {\r\n        let SavedPosts = null;\r\n        if (returneduser)\r\n            SavedPosts = localStorage.getItem(JSON.stringify(returneduser)); // берем элемент из стораж\r\n        if (SavedPosts) {\r\n            const PostsArray = JSON.parse(SavedPosts);\r\n            var donePosts = [];\r\n            var posts = [];\r\n            for(let i = 0; i < PostsArray.length; i++) {\r\n                if (PostsArray[i].completed) {\r\n                    donePosts.add(PostsArray[i]);\r\n                    createPost(PostsArray[i], donePosts);\r\n                    console.log(PostsArray[i]);\r\n                }\r\n                else\r\n                    createPost(PostsArray[i], posts);\r\n            }\r\n            setPosts(JSON.parse(SavedPosts)); // парсим в строку все объекты\r\n        }\r\n        else\r\n            setPosts([]);\r\n    }\r\n\r\n    const savePosts = (posts) => {\r\n        if (user)\r\n            localStorage.setItem(JSON.stringify(user), JSON.stringify(posts)); // кладем элемент в стораж\r\n    }\r\n\r\n    const createPost = (newPost, posts) => {\r\n        if (newPost.title !== '') {\r\n            setPosts([...posts, newPost]) // задаем все элементы\r\n            savePosts([...posts, newPost]); // сохраняем все и последний\r\n        }\r\n        console.log(posts);\r\n    }\r\n\r\n    const removePost = (post, curPosts) => {\r\n        setPosts(curPosts.filter(p => p.id !== post.id)); // задаем\r\n        savePosts(curPosts.filter(p => p.id !== post.id)); // сохраняем\r\n        console.log(curPosts);\r\n    }\r\n\r\n    const WrongPassword = () => {\r\n        alert('Неправильный пароль');\r\n    }\r\n    \r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                {\r\n                    !isPopupOpen\r\n                        ? <MyButton onClick={() => setPopupOpen(true)}>Открыть окно регистрации</MyButton>\r\n                        : <MyButton onClick={() => setPopupOpen(false)}>Закрыть окно регистрации</MyButton>\r\n                }\r\n\r\n                <Login L={islogin} SL={setLogin} AccessAllowed={getPosts} AccessRestricted={WrongPassword}\r\n                    onLogin={(user) => setUser(user)} isOpen={isPopupOpen} onClose={() => setPopupOpen(false)} />\r\n                <PostForm create={createPost} posts={posts} />\r\n\r\n                <h1 style={{fontFamily: 'cursive', textAlign: 'center'}}>Список дел</h1>\r\n\r\n                <div class=\"col-6\">\r\n                {\r\n            /*?*/   posts.length !== 0 ? \r\n            <PostList add={setDonePosts} remove={removePost} posts={posts} create={createPost}/> : <></>\r\n                }\r\n                </div>\r\n                \r\n                <div class=\"col-6\">\r\n                {\r\n            /*?*/   posts.length !== 0 ? \r\n            <PostList add={setPosts} remove={removePost} posts={donePosts} create={createPost}/> : <></>\r\n                }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}