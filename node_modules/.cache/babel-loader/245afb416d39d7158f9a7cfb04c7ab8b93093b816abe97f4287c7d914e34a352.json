{"ast":null,"code":"var _jsxFileName = \"D:\\\\site\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport \"./styles/app.css\";\nimport PostList from './components/PostList';\nimport PostForm from './components/PostForm';\nimport Login from './components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  useEffect(() => {\n    // const SavedPosts = localStorage.getItem('qq'); // берем элемент из стораж\n\n    //  if (SavedPosts)\n    //     setPosts(JSON.parse(SavedPosts)); // парсим в строку все объекты\n  }, []); // пустой массив, значит вызовется один раз\n\n  const savePosts = posts => {\n    localStorage.setItem('qq', JSON.stringify(posts)); // кладем элемент в стораж\n  };\n\n  const createPost = newPost => {\n    if (newPost.title !== '' && newPost.body !== '') {\n      setPosts([...posts, newPost]); // задаем все элементы\n      savePosts([...posts, newPost]); // сохраняем все и последний\n    }\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id)); // задаем\n    savePosts(posts.filter(p => p.id !== post.id)); // сохраняем\n  };\n\n  let User;\n  const saveUserData = user => {\n    // const SavedPosts = localStorage.getItem(user.login); // берем элемент из стораж\n    // if(SavedPosts)\n    //     setPosts(JSON.parse(SavedPosts));\n    // User = user;\n  };\n  const WrongPassword = () => {};\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Login, {\n      AccessAllowed: saveUserData,\n      AccessRestricted: WrongPassword\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u0435\\u043B\",\n      remove: removePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontFamily: 'sans-serif',\n        textAlign: 'center'\n      },\n      children: \"\\u0414\\u0435\\u043B \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"bG8V4duoIfO0BEPgauWMVT5Qvyw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PostList","PostForm","Login","jsxDEV","_jsxDEV","App","_s","posts","setPosts","savePosts","localStorage","setItem","JSON","stringify","createPost","newPost","title","body","removePost","post","filter","p","id","User","saveUserData","user","WrongPassword","className","children","AccessAllowed","AccessRestricted","fileName","_jsxFileName","lineNumber","columnNumber","create","length","remove","style","fontFamily","textAlign","_c","$RefreshReg$"],"sources":["D:/site/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport \"./styles/app.css\"\r\nimport PostList from './components/PostList';\r\nimport PostForm from './components/PostForm';\r\nimport Login from './components/Login';\r\n\r\nfunction App() {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n\r\n    useEffect(() => {\r\n       // const SavedPosts = localStorage.getItem('qq'); // берем элемент из стораж\r\n\r\n      //  if (SavedPosts)\r\n       //     setPosts(JSON.parse(SavedPosts)); // парсим в строку все объекты\r\n\r\n    }, []); // пустой массив, значит вызовется один раз\r\n\r\n    const savePosts = (posts) => {\r\n        localStorage.setItem('qq', JSON.stringify(posts)); // кладем элемент в стораж\r\n    }\r\n\r\n    const createPost = (newPost) => {\r\n        if (newPost.title !== '' && newPost.body !== '') { \r\n            setPosts([...posts, newPost]) // задаем все элементы\r\n            savePosts([...posts, newPost]); // сохраняем все и последний\r\n        }\r\n\r\n    }\r\n\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter(p => p.id !== post.id)); // задаем\r\n        savePosts(posts.filter(p => p.id !== post.id)); // сохраняем\r\n    }\r\n\r\n    let User;\r\n    const saveUserData = (user) => {\r\n        // const SavedPosts = localStorage.getItem(user.login); // берем элемент из стораж\r\n        // if(SavedPosts)\r\n        //     setPosts(JSON.parse(SavedPosts));\r\n        // User = user;\r\n    }\r\n\r\n    const WrongPassword = () => {\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            { \r\n            <Login AccessAllowed={saveUserData} AccessRestricted={WrongPassword}/>\r\n            }\r\n            <PostForm create={createPost} />\r\n            {\r\n                posts.length !== 0\r\n                ?\r\n                <PostList posts={posts} title=\"Список дел\" remove={removePost} />\r\n                :\r\n                <h1 style={{ fontFamily: 'sans-serif', textAlign: 'center' }}>\r\n                    Дел нет\r\n                </h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAO,kBAAkB;AACzB,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEvC,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEX,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACb;;IAED;IACC;EAAA,CAEF,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER,MAAMU,SAAS,GAAIF,KAAK,IAAK;IACzBG,YAAY,CAACC,OAAO,CAAC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACN,KAAK,CAAC,CAAC,CAAC,CAAC;EACvD,CAAC;;EAED,MAAMO,UAAU,GAAIC,OAAO,IAAK;IAC5B,IAAIA,OAAO,CAACC,KAAK,KAAK,EAAE,IAAID,OAAO,CAACE,IAAI,KAAK,EAAE,EAAE;MAC7CT,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAEQ,OAAO,CAAC,CAAC,EAAC;MAC9BN,SAAS,CAAC,CAAC,GAAGF,KAAK,EAAEQ,OAAO,CAAC,CAAC,CAAC,CAAC;IACpC;EAEJ,CAAC;;EAED,MAAMG,UAAU,GAAIC,IAAI,IAAK;IACzBX,QAAQ,CAACD,KAAK,CAACa,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/Cb,SAAS,CAACF,KAAK,CAACa,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKH,IAAI,CAACG,EAAE,CAAC,CAAC,CAAC,CAAC;EACpD,CAAC;;EAED,IAAIC,IAAI;EACR,MAAMC,YAAY,GAAIC,IAAI,IAAK;IAC3B;IACA;IACA;IACA;EAAA,CACH;EAED,MAAMC,aAAa,GAAGA,CAAA,KAAM,CAE5B,CAAC;EAED,oBACItB,OAAA;IAAKuB,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAEhBxB,OAAA,CAACF,KAAK;MAAC2B,aAAa,EAAEL,YAAa;MAACM,gBAAgB,EAAEJ;IAAc;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAEtE9B,OAAA,CAACH,QAAQ;MAACkC,MAAM,EAAErB;IAAW;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAE5B3B,KAAK,CAAC6B,MAAM,KAAK,CAAC,gBAElBhC,OAAA,CAACJ,QAAQ;MAACO,KAAK,EAAEA,KAAM;MAACS,KAAK,EAAC,yDAAY;MAACqB,MAAM,EAAEnB;IAAW;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,gBAEjE9B,OAAA;MAAIkC,KAAK,EAAE;QAAEC,UAAU,EAAE,YAAY;QAAEC,SAAS,EAAE;MAAS,CAAE;MAAAZ,QAAA,EAAC;IAE9D;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAER,CAAC;AAEd;AAAC5B,EAAA,CA1DQD,GAAG;AAAAoC,EAAA,GAAHpC,GAAG;AA4DZ,eAAeA,GAAG;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}