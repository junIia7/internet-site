{"ast":null,"code":"var _jsxFileName = \"D:\\\\site\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport PostList from './components/PostList';\nimport PostForm from './components/PostForm';\nimport Login from './components/Login';\nimport MyButton from './components/UI/button/mybutton.jsx';\nimport \"./css/bootstrap.min.css\";\nimport \"./styles/app.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [itemsTodo, setItemsTodo] = useState([{\n    id: 1,\n    text: 'Task 1'\n  }, {\n    id: 2,\n    text: 'Task 2'\n  }, {\n    id: 3,\n    text: 'Task 3'\n  }]);\n  const [itemsDone, setItemsDone] = useState([]);\n  const handleDragStart = (e, draggedItem) => {\n    e.dataTransfer.setData('text/plain', draggedItem.id.toString());\n  };\n  const handleDrop = (e, targetColumn) => {\n    e.preventDefault();\n    const draggedItemId = +e.dataTransfer.getData('text/plain');\n    const draggedItem = itemsTodo.find(item => item.id === draggedItemId);\n    if (targetColumn === 'done' && draggedItem) {\n      setItemsDone([...itemsDone, draggedItem]);\n      setItemsTodo(itemsTodo.filter(item => item.id !== draggedItemId));\n    } else if (targetColumn === 'todo' && draggedItem) {\n      console.log(\"jsknjsd\");\n      setItemsTodo([...itemsTodo, draggedItem]);\n      setItemsDone(itemsDone.filter(item => item.id !== draggedItemId));\n    }\n  };\n  const handleDragOver = e => {\n    e.preventDefault();\n  };\n  const [posts, setPosts] = useState([]);\n  const [donePosts, setDonePosts] = useState([]);\n  const [user, setUser] = useState({\n    login: '',\n    password: \"\"\n  });\n  const [islogin, setLogin] = useState(JSON.parse(localStorage.getItem('boollog:')) | false);\n  const [isPopupOpen, setPopupOpen] = useState(false);\n  useEffect(() => {\n    setUser(JSON.parse(localStorage.getItem('lastuser:')));\n    const stringuser = localStorage.getItem('lastuser:');\n    if (stringuser) {\n      const user = JSON.parse(stringuser);\n      getPosts(user);\n    }\n  }, []);\n  const getPosts = returneduser => {\n    let SavedPosts = null;\n    if (returneduser) SavedPosts = localStorage.getItem(JSON.stringify(returneduser)); // берем элемент из стораж\n    if (SavedPosts) {\n      const PostsArray = JSON.parse(SavedPosts);\n      var tempdonePosts = [];\n      var tempposts = [];\n      for (let i = 0; i < PostsArray.length; i++) {\n        if (PostsArray[i].completed) tempdonePosts.push(PostsArray[i]);else tempposts.push(PostsArray[i]);\n      }\n      setPosts(tempposts); // парсим в строку все объекты\n      setDonePosts(tempdonePosts);\n    } else {\n      setPosts([]);\n      setDonePosts([]);\n    }\n  };\n  const savePosts = posts => {\n    if (user) localStorage.setItem(JSON.stringify(user), JSON.stringify(posts)); // кладем элемент в стораж\n  };\n\n  const createPost = (newPost, posts, antiPosts, flag) => {\n    if (newPost.title !== '') {\n      if (newPost.completed === false) setPosts([...posts, newPost]); // задаем все элементы\n      else setDonePosts([...posts, newPost]);\n    }\n    if (flag) savePosts([...posts, newPost]);else savePosts([...posts, ...antiPosts]); // сохраняем все и последний\n  };\n\n  const removePost = (post, curPosts, antiPosts) => {\n    if (post.completed === true) setDonePosts(curPosts.filter(p => p.id !== post.id)); // задаем\n    else setPosts(curPosts.filter(p => p.id !== post.id)); // задаем\n    savePosts(antiPosts.concat(curPosts.filter(p => p.id !== post.id))); // сохраняем\n  };\n\n  const WrongPassword = () => {\n    alert('Неправильный пароль');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    class: \"container\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: 'flex',\n          gap: '20px'\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          onDrop: e => handleDrop(e, 'todo'),\n          onDragOver: handleDragOver,\n          style: {\n            border: '2px solid black',\n            padding: '10px',\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Todo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), itemsTodo.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: true,\n            onDragStart: e => handleDragStart(e, item),\n            style: {\n              border: '1px solid',\n              marginBottom: '8px',\n              padding: '8px'\n            },\n            children: item.text\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          onDrop: e => handleDrop(e, 'done'),\n          onDragOver: handleDragOver,\n          style: {\n            border: '2px solid black',\n            padding: '10px',\n            flex: 1\n          },\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            children: \"Done\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this), itemsDone.map(item => /*#__PURE__*/_jsxDEV(\"div\", {\n            draggable: true,\n            onDragStart: e => handleDragStart(e, item),\n            style: {\n              border: '1px solid',\n              marginBottom: '8px',\n              padding: '8px'\n            },\n            children: item.text\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 29\n          }, this))]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 17\n      }, this), !isPopupOpen ? /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => setPopupOpen(true),\n        children: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u043A\\u043D\\u043E \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 27\n      }, this) : /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: () => setPopupOpen(false),\n        children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u043A\\u043D\\u043E \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 27\n      }, this), /*#__PURE__*/_jsxDEV(Login, {\n        L: islogin,\n        SL: setLogin,\n        AccessAllowed: getPosts,\n        AccessRestricted: WrongPassword,\n        onLogin: user => setUser(user),\n        isOpen: isPopupOpen,\n        onClose: () => setPopupOpen(false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n        create: createPost,\n        posts: posts,\n        antiPosts: donePosts\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n        style: {\n          fontFamily: 'cursive',\n          textAlign: 'center'\n        },\n        children: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u0435\\u043B\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-6\",\n        children: /*?*/posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n          add: setDonePosts,\n          remove: removePost,\n          create: createPost,\n          doneposts: donePosts,\n          posts: posts,\n          flag: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"col-6\",\n        children: /*?*/donePosts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n          add: setPosts,\n          remove: removePost,\n          create: createPost,\n          doneposts: donePosts,\n          posts: posts,\n          flag: false\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 29\n        }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"Q8NchLLEGuzKjklCg+XggnOci1w=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PostList","PostForm","Login","MyButton","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","itemsTodo","setItemsTodo","id","text","itemsDone","setItemsDone","handleDragStart","e","draggedItem","dataTransfer","setData","toString","handleDrop","targetColumn","preventDefault","draggedItemId","getData","find","item","filter","console","log","handleDragOver","posts","setPosts","donePosts","setDonePosts","user","setUser","login","password","islogin","setLogin","JSON","parse","localStorage","getItem","isPopupOpen","setPopupOpen","stringuser","getPosts","returneduser","SavedPosts","stringify","PostsArray","tempdonePosts","tempposts","i","length","completed","push","savePosts","setItem","createPost","newPost","antiPosts","flag","title","removePost","post","curPosts","p","concat","WrongPassword","alert","class","children","style","display","gap","onDrop","onDragOver","border","padding","flex","fileName","_jsxFileName","lineNumber","columnNumber","map","draggable","onDragStart","marginBottom","onClick","L","SL","AccessAllowed","AccessRestricted","onLogin","isOpen","onClose","create","fontFamily","textAlign","add","remove","doneposts","_c","$RefreshReg$"],"sources":["D:/site/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport PostList from './components/PostList';\r\nimport PostForm from './components/PostForm';\r\nimport Login from './components/Login';\r\nimport MyButton from './components/UI/button/mybutton.jsx';\r\nimport \"./css/bootstrap.min.css\"\r\nimport \"./styles/app.css\"\r\n\r\nfunction App() {\r\n\r\n    const [itemsTodo, setItemsTodo] = useState([\r\n        { id: 1, text: 'Task 1' },\r\n        { id: 2, text: 'Task 2' },\r\n        { id: 3, text: 'Task 3' },\r\n    ]);\r\n\r\n    const [itemsDone, setItemsDone] = useState([]);\r\n\r\n    const handleDragStart = (e, draggedItem) => {\r\n        e.dataTransfer.setData('text/plain', draggedItem.id.toString());\r\n    };\r\n\r\n    const handleDrop = (e, targetColumn) => {\r\n        e.preventDefault();\r\n        const draggedItemId = +e.dataTransfer.getData('text/plain');\r\n        const draggedItem = itemsTodo.find((item) => item.id === draggedItemId);\r\n      \r\n        if (targetColumn === 'done' && draggedItem) {\r\n            setItemsDone([...itemsDone, draggedItem]);\r\n            setItemsTodo(itemsTodo.filter((item) => item.id !== draggedItemId));\r\n        } \r\n        else if (targetColumn === 'todo' && draggedItem) {\r\n            console.log(\"jsknjsd\");\r\n            setItemsTodo([...itemsTodo, draggedItem]);\r\n            setItemsDone(itemsDone.filter((item) => item.id !== draggedItemId));\r\n        }\r\n    };\r\n\r\n    const handleDragOver = (e) => {\r\n        e.preventDefault();\r\n    };\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [donePosts, setDonePosts] = useState([]);\r\n\r\n    const [user, setUser] = useState({ login: '', password: \"\" });\r\n    const [islogin, setLogin] = useState(JSON.parse(localStorage.getItem('boollog:')) | false);\r\n    const [isPopupOpen, setPopupOpen] = useState(false);\r\n\r\n    useEffect(() => {\r\n        setUser(JSON.parse(localStorage.getItem('lastuser:')));\r\n        const stringuser = localStorage.getItem('lastuser:');\r\n        if (stringuser) {\r\n            const user = JSON.parse(stringuser);\r\n            getPosts(user);\r\n        }\r\n    }, []);\r\n\r\n    const getPosts = (returneduser) => {\r\n        let SavedPosts = null;\r\n        if (returneduser)\r\n            SavedPosts = localStorage.getItem(JSON.stringify(returneduser)); // берем элемент из стораж\r\n        if (SavedPosts) {\r\n            const PostsArray = JSON.parse(SavedPosts);\r\n            var tempdonePosts = [];\r\n            var tempposts = [];\r\n            for (let i = 0; i < PostsArray.length; i++) {\r\n                if (PostsArray[i].completed)\r\n                    tempdonePosts.push(PostsArray[i]);\r\n                else\r\n                    tempposts.push(PostsArray[i]);\r\n            }\r\n            setPosts(tempposts); // парсим в строку все объекты\r\n            setDonePosts(tempdonePosts)\r\n        }\r\n        else {\r\n            setPosts([]);\r\n            setDonePosts([]);\r\n        }\r\n    }\r\n\r\n    const savePosts = (posts) => {\r\n        if (user)\r\n            localStorage.setItem(JSON.stringify(user), JSON.stringify(posts)); // кладем элемент в стораж\r\n    }\r\n\r\n    const createPost = (newPost, posts, antiPosts, flag) => {\r\n        if (newPost.title !== '') {\r\n            if (newPost.completed === false)\r\n                setPosts([...posts, newPost]) // задаем все элементы\r\n            else\r\n                setDonePosts([...posts, newPost])\r\n        }\r\n        if (flag)\r\n            savePosts([...posts, newPost]);\r\n        else\r\n            savePosts([...posts, ...antiPosts]); // сохраняем все и последний\r\n    }\r\n\r\n    const removePost = (post, curPosts, antiPosts) => {\r\n        if (post.completed === true)\r\n            setDonePosts(curPosts.filter(p => p.id !== post.id)); // задаем\r\n        else\r\n            setPosts(curPosts.filter(p => p.id !== post.id)); // задаем\r\n        savePosts(antiPosts.concat(curPosts.filter(p => p.id !== post.id))); // сохраняем\r\n    }\r\n\r\n    const WrongPassword = () => {\r\n        alert('Неправильный пароль');\r\n    }\r\n\r\n    return (\r\n        <div class=\"container\">\r\n            <div class=\"row\">\r\n                <div style={{ display: 'flex', gap: '20px' }}>\r\n                    <div\r\n                        onDrop={(e) => handleDrop(e, 'todo')}\r\n                        onDragOver={handleDragOver}\r\n                        style={{ border: '2px solid black', padding: '10px', flex: 1 }}\r\n                    >\r\n                        <h2>Todo</h2>\r\n                        {itemsTodo.map((item) => (\r\n                            <div\r\n                                key={item.id}\r\n                                draggable\r\n                                onDragStart={(e) => handleDragStart(e, item)}\r\n                                style={{ border: '1px solid', marginBottom: '8px', padding: '8px' }}\r\n                            >\r\n                                {item.text}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                    <div\r\n                        onDrop={(e) => handleDrop(e, 'done')}\r\n                        onDragOver={handleDragOver}\r\n                        style={{ border: '2px solid black', padding: '10px', flex: 1 }}\r\n                    >\r\n                        <h2>Done</h2>\r\n                        {itemsDone.map((item) => (\r\n                            <div\r\n                                key={item.id}\r\n                                draggable\r\n                                onDragStart={(e) => handleDragStart(e, item)}\r\n                                style={{ border: '1px solid', marginBottom: '8px', padding: '8px' }}\r\n                            >\r\n                                {item.text}\r\n                            </div>\r\n                        ))}\r\n                    </div>\r\n                </div>\r\n                {\r\n                    !isPopupOpen\r\n                        ? <MyButton onClick={() => setPopupOpen(true)}>Открыть окно регистрации</MyButton>\r\n                        : <MyButton onClick={() => setPopupOpen(false)}>Закрыть окно регистрации</MyButton>\r\n                }\r\n\r\n                <Login L={islogin} SL={setLogin} AccessAllowed={getPosts} AccessRestricted={WrongPassword}\r\n                    onLogin={(user) => setUser(user)} isOpen={isPopupOpen} onClose={() => setPopupOpen(false)} />\r\n                <PostForm create={createPost} posts={posts} antiPosts={donePosts} />\r\n\r\n                <h1 style={{ fontFamily: 'cursive', textAlign: 'center' }}>Список дел</h1>\r\n\r\n                <div class=\"col-6\">\r\n                    {\r\n            /*?*/   posts.length !== 0 ?\r\n                            <PostList add={setDonePosts} remove={removePost} create={createPost}\r\n                                doneposts={donePosts} posts={posts} flag={true} /> : <></>\r\n                    }\r\n                </div>\r\n\r\n                <div class=\"col-6\">\r\n                    {\r\n            /*?*/   donePosts.length !== 0 ?\r\n                            <PostList add={setPosts} remove={removePost} create={createPost}\r\n                                doneposts={donePosts} posts={posts} flag={false} /> : <></>\r\n                    }\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,QAAQ,MAAM,uBAAuB;AAC5C,OAAOC,KAAK,MAAM,oBAAoB;AACtC,OAAOC,QAAQ,MAAM,qCAAqC;AAC1D,OAAO,yBAAyB;AAChC,OAAO,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAEzB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAEX,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,CACvC;IAAEc,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,EACzB;IAAED,EAAE,EAAE,CAAC;IAAEC,IAAI,EAAE;EAAS,CAAC,CAC5B,CAAC;EAEF,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAMkB,eAAe,GAAGA,CAACC,CAAC,EAAEC,WAAW,KAAK;IACxCD,CAAC,CAACE,YAAY,CAACC,OAAO,CAAC,YAAY,EAAEF,WAAW,CAACN,EAAE,CAACS,QAAQ,CAAC,CAAC,CAAC;EACnE,CAAC;EAED,MAAMC,UAAU,GAAGA,CAACL,CAAC,EAAEM,YAAY,KAAK;IACpCN,CAAC,CAACO,cAAc,CAAC,CAAC;IAClB,MAAMC,aAAa,GAAG,CAACR,CAAC,CAACE,YAAY,CAACO,OAAO,CAAC,YAAY,CAAC;IAC3D,MAAMR,WAAW,GAAGR,SAAS,CAACiB,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAAChB,EAAE,KAAKa,aAAa,CAAC;IAEvE,IAAIF,YAAY,KAAK,MAAM,IAAIL,WAAW,EAAE;MACxCH,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEI,WAAW,CAAC,CAAC;MACzCP,YAAY,CAACD,SAAS,CAACmB,MAAM,CAAED,IAAI,IAAKA,IAAI,CAAChB,EAAE,KAAKa,aAAa,CAAC,CAAC;IACvE,CAAC,MACI,IAAIF,YAAY,KAAK,MAAM,IAAIL,WAAW,EAAE;MAC7CY,OAAO,CAACC,GAAG,CAAC,SAAS,CAAC;MACtBpB,YAAY,CAAC,CAAC,GAAGD,SAAS,EAAEQ,WAAW,CAAC,CAAC;MACzCH,YAAY,CAACD,SAAS,CAACe,MAAM,CAAED,IAAI,IAAKA,IAAI,CAAChB,EAAE,KAAKa,aAAa,CAAC,CAAC;IACvE;EACJ,CAAC;EAED,MAAMO,cAAc,GAAIf,CAAC,IAAK;IAC1BA,CAAC,CAACO,cAAc,CAAC,CAAC;EACtB,CAAC;EAED,MAAM,CAACS,KAAK,EAAEC,QAAQ,CAAC,GAAGpC,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACqC,SAAS,EAAEC,YAAY,CAAC,GAAGtC,QAAQ,CAAC,EAAE,CAAC;EAE9C,MAAM,CAACuC,IAAI,EAAEC,OAAO,CAAC,GAAGxC,QAAQ,CAAC;IAAEyC,KAAK,EAAE,EAAE;IAAEC,QAAQ,EAAE;EAAG,CAAC,CAAC;EAC7D,MAAM,CAACC,OAAO,EAAEC,QAAQ,CAAC,GAAG5C,QAAQ,CAAC6C,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,UAAU,CAAC,CAAC,GAAG,KAAK,CAAC;EAC1F,MAAM,CAACC,WAAW,EAAEC,YAAY,CAAC,GAAGlD,QAAQ,CAAC,KAAK,CAAC;EAEnDC,SAAS,CAAC,MAAM;IACZuC,OAAO,CAACK,IAAI,CAACC,KAAK,CAACC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC,CAAC,CAAC;IACtD,MAAMG,UAAU,GAAGJ,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IACpD,IAAIG,UAAU,EAAE;MACZ,MAAMZ,IAAI,GAAGM,IAAI,CAACC,KAAK,CAACK,UAAU,CAAC;MACnCC,QAAQ,CAACb,IAAI,CAAC;IAClB;EACJ,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMa,QAAQ,GAAIC,YAAY,IAAK;IAC/B,IAAIC,UAAU,GAAG,IAAI;IACrB,IAAID,YAAY,EACZC,UAAU,GAAGP,YAAY,CAACC,OAAO,CAACH,IAAI,CAACU,SAAS,CAACF,YAAY,CAAC,CAAC,CAAC,CAAC;IACrE,IAAIC,UAAU,EAAE;MACZ,MAAME,UAAU,GAAGX,IAAI,CAACC,KAAK,CAACQ,UAAU,CAAC;MACzC,IAAIG,aAAa,GAAG,EAAE;MACtB,IAAIC,SAAS,GAAG,EAAE;MAClB,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGH,UAAU,CAACI,MAAM,EAAED,CAAC,EAAE,EAAE;QACxC,IAAIH,UAAU,CAACG,CAAC,CAAC,CAACE,SAAS,EACvBJ,aAAa,CAACK,IAAI,CAACN,UAAU,CAACG,CAAC,CAAC,CAAC,CAAC,KAElCD,SAAS,CAACI,IAAI,CAACN,UAAU,CAACG,CAAC,CAAC,CAAC;MACrC;MACAvB,QAAQ,CAACsB,SAAS,CAAC,CAAC,CAAC;MACrBpB,YAAY,CAACmB,aAAa,CAAC;IAC/B,CAAC,MACI;MACDrB,QAAQ,CAAC,EAAE,CAAC;MACZE,YAAY,CAAC,EAAE,CAAC;IACpB;EACJ,CAAC;EAED,MAAMyB,SAAS,GAAI5B,KAAK,IAAK;IACzB,IAAII,IAAI,EACJQ,YAAY,CAACiB,OAAO,CAACnB,IAAI,CAACU,SAAS,CAAChB,IAAI,CAAC,EAAEM,IAAI,CAACU,SAAS,CAACpB,KAAK,CAAC,CAAC,CAAC,CAAC;EAC3E,CAAC;;EAED,MAAM8B,UAAU,GAAGA,CAACC,OAAO,EAAE/B,KAAK,EAAEgC,SAAS,EAAEC,IAAI,KAAK;IACpD,IAAIF,OAAO,CAACG,KAAK,KAAK,EAAE,EAAE;MACtB,IAAIH,OAAO,CAACL,SAAS,KAAK,KAAK,EAC3BzB,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE+B,OAAO,CAAC,CAAC,EAAC;MAAA,KAE9B5B,YAAY,CAAC,CAAC,GAAGH,KAAK,EAAE+B,OAAO,CAAC,CAAC;IACzC;IACA,IAAIE,IAAI,EACJL,SAAS,CAAC,CAAC,GAAG5B,KAAK,EAAE+B,OAAO,CAAC,CAAC,CAAC,KAE/BH,SAAS,CAAC,CAAC,GAAG5B,KAAK,EAAE,GAAGgC,SAAS,CAAC,CAAC,CAAC,CAAC;EAC7C,CAAC;;EAED,MAAMG,UAAU,GAAGA,CAACC,IAAI,EAAEC,QAAQ,EAAEL,SAAS,KAAK;IAC9C,IAAII,IAAI,CAACV,SAAS,KAAK,IAAI,EACvBvB,YAAY,CAACkC,QAAQ,CAACzC,MAAM,CAAC0C,CAAC,IAAIA,CAAC,CAAC3D,EAAE,KAAKyD,IAAI,CAACzD,EAAE,CAAC,CAAC,CAAC,CAAC;IAAA,KAEtDsB,QAAQ,CAACoC,QAAQ,CAACzC,MAAM,CAAC0C,CAAC,IAAIA,CAAC,CAAC3D,EAAE,KAAKyD,IAAI,CAACzD,EAAE,CAAC,CAAC,CAAC,CAAC;IACtDiD,SAAS,CAACI,SAAS,CAACO,MAAM,CAACF,QAAQ,CAACzC,MAAM,CAAC0C,CAAC,IAAIA,CAAC,CAAC3D,EAAE,KAAKyD,IAAI,CAACzD,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC;EACzE,CAAC;;EAED,MAAM6D,aAAa,GAAGA,CAAA,KAAM;IACxBC,KAAK,CAAC,qBAAqB,CAAC;EAChC,CAAC;EAED,oBACIrE,OAAA;IAAKsE,KAAK,EAAC,WAAW;IAAAC,QAAA,eAClBvE,OAAA;MAAKsE,KAAK,EAAC,KAAK;MAAAC,QAAA,gBACZvE,OAAA;QAAKwE,KAAK,EAAE;UAAEC,OAAO,EAAE,MAAM;UAAEC,GAAG,EAAE;QAAO,CAAE;QAAAH,QAAA,gBACzCvE,OAAA;UACI2E,MAAM,EAAG/D,CAAC,IAAKK,UAAU,CAACL,CAAC,EAAE,MAAM,CAAE;UACrCgE,UAAU,EAAEjD,cAAe;UAC3B6C,KAAK,EAAE;YAAEK,MAAM,EAAE,iBAAiB;YAAEC,OAAO,EAAE,MAAM;YAAEC,IAAI,EAAE;UAAE,CAAE;UAAAR,QAAA,gBAE/DvE,OAAA;YAAAuE,QAAA,EAAI;UAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACZ9E,SAAS,CAAC+E,GAAG,CAAE7D,IAAI,iBAChBvB,OAAA;YAEIqF,SAAS;YACTC,WAAW,EAAG1E,CAAC,IAAKD,eAAe,CAACC,CAAC,EAAEW,IAAI,CAAE;YAC7CiD,KAAK,EAAE;cAAEK,MAAM,EAAE,WAAW;cAAEU,YAAY,EAAE,KAAK;cAAET,OAAO,EAAE;YAAM,CAAE;YAAAP,QAAA,EAEnEhD,IAAI,CAACf;UAAI,GALLe,IAAI,CAAChB,EAAE;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMX,CACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC,eACNnF,OAAA;UACI2E,MAAM,EAAG/D,CAAC,IAAKK,UAAU,CAACL,CAAC,EAAE,MAAM,CAAE;UACrCgE,UAAU,EAAEjD,cAAe;UAC3B6C,KAAK,EAAE;YAAEK,MAAM,EAAE,iBAAiB;YAAEC,OAAO,EAAE,MAAM;YAAEC,IAAI,EAAE;UAAE,CAAE;UAAAR,QAAA,gBAE/DvE,OAAA;YAAAuE,QAAA,EAAI;UAAI;YAAAS,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAI,CAAC,EACZ1E,SAAS,CAAC2E,GAAG,CAAE7D,IAAI,iBAChBvB,OAAA;YAEIqF,SAAS;YACTC,WAAW,EAAG1E,CAAC,IAAKD,eAAe,CAACC,CAAC,EAAEW,IAAI,CAAE;YAC7CiD,KAAK,EAAE;cAAEK,MAAM,EAAE,WAAW;cAAEU,YAAY,EAAE,KAAK;cAAET,OAAO,EAAE;YAAM,CAAE;YAAAP,QAAA,EAEnEhD,IAAI,CAACf;UAAI,GALLe,IAAI,CAAChB,EAAE;YAAAyE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAMX,CACR,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACD,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACL,CAAC,EAEF,CAACzC,WAAW,gBACN1C,OAAA,CAACF,QAAQ;QAAC0F,OAAO,EAAEA,CAAA,KAAM7C,YAAY,CAAC,IAAI,CAAE;QAAA4B,QAAA,EAAC;MAAwB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,gBAChFnF,OAAA,CAACF,QAAQ;QAAC0F,OAAO,EAAEA,CAAA,KAAM7C,YAAY,CAAC,KAAK,CAAE;QAAA4B,QAAA,EAAC;MAAwB;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAU,CAAC,eAG3FnF,OAAA,CAACH,KAAK;QAAC4F,CAAC,EAAErD,OAAQ;QAACsD,EAAE,EAAErD,QAAS;QAACsD,aAAa,EAAE9C,QAAS;QAAC+C,gBAAgB,EAAExB,aAAc;QACtFyB,OAAO,EAAG7D,IAAI,IAAKC,OAAO,CAACD,IAAI,CAAE;QAAC8D,MAAM,EAAEpD,WAAY;QAACqD,OAAO,EAAEA,CAAA,KAAMpD,YAAY,CAAC,KAAK;MAAE;QAAAqC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACjGnF,OAAA,CAACJ,QAAQ;QAACoG,MAAM,EAAEtC,UAAW;QAAC9B,KAAK,EAAEA,KAAM;QAACgC,SAAS,EAAE9B;MAAU;QAAAkD,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eAEpEnF,OAAA;QAAIwE,KAAK,EAAE;UAAEyB,UAAU,EAAE,SAAS;UAAEC,SAAS,EAAE;QAAS,CAAE;QAAA3B,QAAA,EAAC;MAAU;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAE1EnF,OAAA;QAAKsE,KAAK,EAAC,OAAO;QAAAC,QAAA,EAEtB,KAAQ3C,KAAK,CAACyB,MAAM,KAAK,CAAC,gBACVrD,OAAA,CAACL,QAAQ;UAACwG,GAAG,EAAEpE,YAAa;UAACqE,MAAM,EAAErC,UAAW;UAACiC,MAAM,EAAEtC,UAAW;UAChE2C,SAAS,EAAEvE,SAAU;UAACF,KAAK,EAAEA,KAAM;UAACiC,IAAI,EAAE;QAAK;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGnF,OAAA,CAAAE,SAAA,mBAAI;MAAC;QAAA8E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAErE,CAAC,eAENnF,OAAA;QAAKsE,KAAK,EAAC,OAAO;QAAAC,QAAA,EAEtB,KAAQzC,SAAS,CAACuB,MAAM,KAAK,CAAC,gBACdrD,OAAA,CAACL,QAAQ;UAACwG,GAAG,EAAEtE,QAAS;UAACuE,MAAM,EAAErC,UAAW;UAACiC,MAAM,EAAEtC,UAAW;UAC5D2C,SAAS,EAAEvE,SAAU;UAACF,KAAK,EAAEA,KAAM;UAACiC,IAAI,EAAE;QAAM;UAAAmB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,gBAAGnF,OAAA,CAAAE,SAAA,mBAAI;MAAC;QAAA8E,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAEtE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACL;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC/E,EAAA,CA5KQD,GAAG;AAAAmG,EAAA,GAAHnG,GAAG;AA8KZ,eAAeA,GAAG;AAAC,IAAAmG,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}