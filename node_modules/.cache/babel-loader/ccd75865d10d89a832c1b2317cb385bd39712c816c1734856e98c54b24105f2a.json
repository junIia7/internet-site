{"ast":null,"code":"var _jsxFileName = \"D:\\\\site\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport \"./styles/app.css\";\nimport PostList from './components/PostList';\nimport PostForm from './components/PostForm';\nimport Login from './components/Login';\nimport MyButton from './components/UI/button/mybutton.jsx';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState({\n    login: '',\n    password: \"\"\n  });\n  const [islogin, setLogin] = useState(JSON.parse(localStorage.getItem('boollog:')) | false);\n  const [isPopupOpen, setPopupOpen] = useState(flase);\n  useEffect(() => {\n    setUser(JSON.parse(localStorage.getItem('lastuser:')));\n    const stringuser = localStorage.getItem('lastuser:');\n    if (stringuser) {\n      const user = JSON.parse(stringuser);\n      getPosts(user);\n    }\n  }, []);\n  const getPosts = returneduser => {\n    let SavedPosts = null;\n    if (returneduser) SavedPosts = localStorage.getItem(JSON.stringify(returneduser)); // берем элемент из стораж\n    if (SavedPosts) setPosts(JSON.parse(SavedPosts)); // парсим в строку все объекты\n    else setPosts([]);\n  };\n  const savePosts = posts => {\n    if (user) localStorage.setItem(JSON.stringify(user), JSON.stringify(posts)); // кладем элемент в стораж\n  };\n\n  const createPost = newPost => {\n    if (newPost.title !== '') {\n      setPosts([...posts, newPost]); // задаем все элементы\n      savePosts([...posts, newPost]); // сохраняем все и последний\n    }\n\n    console.log(posts);\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id)); // задаем\n    savePosts(posts.filter(p => p.id !== post.id)); // сохраняем\n    console.log(posts);\n  };\n  const WrongPassword = () => {\n    alert('Неправильный пароль');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [!isPopupOpen ? /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => setPopupOpen(true),\n      children: \"\\u041E\\u0442\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u043A\\u043D\\u043E \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 23\n    }, this) : /*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => setPopupOpen(false),\n      children: \"\\u0417\\u0430\\u043A\\u0440\\u044B\\u0442\\u044C \\u043E\\u043A\\u043D\\u043E \\u0440\\u0435\\u0433\\u0438\\u0441\\u0442\\u0440\\u0430\\u0446\\u0438\\u0438\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 23\n    }, this), /*#__PURE__*/_jsxDEV(Login, {\n      L: islogin,\n      SL: setLogin,\n      AccessAllowed: getPosts,\n      AccessRestricted: WrongPassword,\n      onLogin: user => setUser(user),\n      isOpen: isPopupOpen,\n      onClose: () => setPopupOpen(false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n      add: setPosts,\n      remove: removePost,\n      posts: posts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u0435\\u043B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontFamily: 'cursive',\n        textAlign: 'center'\n      },\n      children: \"\\u0414\\u0435\\u043B \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"L36SjPcJPn9onrF7/xjCdTEVBp4=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PostList","PostForm","Login","MyButton","jsxDEV","_jsxDEV","App","_s","posts","setPosts","user","setUser","login","password","islogin","setLogin","JSON","parse","localStorage","getItem","isPopupOpen","setPopupOpen","flase","stringuser","getPosts","returneduser","SavedPosts","stringify","savePosts","setItem","createPost","newPost","title","console","log","removePost","post","filter","p","id","WrongPassword","alert","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","L","SL","AccessAllowed","AccessRestricted","onLogin","isOpen","onClose","create","length","add","remove","style","fontFamily","textAlign","_c","$RefreshReg$"],"sources":["D:/site/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport \"./styles/app.css\"\r\nimport PostList from './components/PostList';\r\nimport PostForm from './components/PostForm';\r\nimport Login from './components/Login';\r\nimport MyButton from './components/UI/button/mybutton.jsx';\r\n\r\nfunction App() {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [user, setUser] = useState({ login: '', password: \"\" });\r\n    const [islogin, setLogin] = useState(JSON.parse(localStorage.getItem('boollog:')) | false);\r\n    const [isPopupOpen, setPopupOpen] = useState(flase);\r\n\r\n    useEffect(() => {\r\n        setUser(JSON.parse(localStorage.getItem('lastuser:')));\r\n        const stringuser = localStorage.getItem('lastuser:');\r\n        if (stringuser) {\r\n            const user = JSON.parse(stringuser);\r\n            getPosts(user);\r\n        }\r\n    }, []);\r\n\r\n    const getPosts = (returneduser) => {\r\n        let SavedPosts = null;\r\n        if (returneduser)\r\n            SavedPosts = localStorage.getItem(JSON.stringify(returneduser)); // берем элемент из стораж\r\n        if (SavedPosts)\r\n            setPosts(JSON.parse(SavedPosts)); // парсим в строку все объекты\r\n        else\r\n            setPosts([]);\r\n    }\r\n\r\n    const savePosts = (posts) => {\r\n        if (user)\r\n            localStorage.setItem(JSON.stringify(user), JSON.stringify(posts)); // кладем элемент в стораж\r\n    }\r\n\r\n    const createPost = (newPost) => {\r\n        if (newPost.title !== '') {\r\n            setPosts([...posts, newPost]) // задаем все элементы\r\n            savePosts([...posts, newPost]); // сохраняем все и последний\r\n        }\r\n        console.log(posts);\r\n    }\r\n\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter(p => p.id !== post.id)); // задаем\r\n        savePosts(posts.filter(p => p.id !== post.id)); // сохраняем\r\n        console.log(posts);\r\n    }\r\n\r\n    const WrongPassword = () => {\r\n        alert('Неправильный пароль');\r\n    }\r\n    \r\n    return (\r\n        <div className=\"App\">\r\n            {\r\n                !isPopupOpen\r\n                    ? <MyButton onClick={() => setPopupOpen(true)}>Открыть окно регистрации</MyButton>\r\n                    : <MyButton onClick={() => setPopupOpen(false)}>Закрыть окно регистрации</MyButton>\r\n            }\r\n\r\n            <Login L={islogin} SL={setLogin} AccessAllowed={getPosts} AccessRestricted={WrongPassword}\r\n                onLogin={(user) => setUser(user)} isOpen={isPopupOpen} onClose={() => setPopupOpen(false)} />\r\n            <PostForm create={createPost} />\r\n            {\r\n                posts.length !== 0\r\n                    ?\r\n                    <PostList add={setPosts} remove={removePost} posts={posts} title=\"Список дел\" />\r\n                    :\r\n                    <h1 style={{ fontFamily: 'cursive', textAlign: 'center' }}>\r\n                        Дел нет\r\n                    </h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}