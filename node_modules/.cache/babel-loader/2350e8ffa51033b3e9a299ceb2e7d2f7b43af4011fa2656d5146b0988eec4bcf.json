{"ast":null,"code":"var _jsxFileName = \"D:\\\\site\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useEffect } from 'react';\nimport \"./styles/app.css\";\nimport PostList from './components/PostList';\nimport PostForm from './components/PostForm';\nimport Login from './components/Login';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [user, setUser] = useState(null);\n  const getPosts = user => {\n    var SavedPosts = null;\n    if (user) {\n      const userKey = `userData_${user.login}`;\n      SavedPosts = localStorage.getItem(user); // берем элемент из стораж\n    }\n\n    if (SavedPosts) {\n      setPosts(JSON.parse(SavedPosts)); // парсим в строку все объекты\n      console.log(\"ЕСТЬ ПОСТЫ \" + SavedPosts);\n    } else {\n      setPosts([]);\n      console.log(\"НЕТ ПОСТОВ \" + SavedPosts);\n    }\n  };\n  const savePosts = posts => {\n    console.log(user);\n    if (user) {\n      const userKey = `userData_${user.login}`;\n      localStorage.setItem(user, JSON.stringify(posts)); // кладем элемент в стораж\n      console.log(user);\n    } else console.log(\"emptyuser\");\n  };\n  const createPost = newPost => {\n    if (newPost.title !== '' && newPost.body !== '') {\n      setPosts([...posts, newPost]); // задаем все элементы\n      savePosts([...posts, newPost]); // сохраняем все и последний\n      console.log(posts);\n    }\n    localStorage.clear();\n  };\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id)); // задаем\n    savePosts(posts.filter(p => p.id !== post.id)); // сохраняем\n  };\n\n  const WrongPassword = () => {\n    alert('Неправильный пароль');\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Login, {\n      AccessAllowed: getPosts,\n      AccessRestricted: WrongPassword,\n      onLogin: user => setUser(user)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      title: \"\\u0421\\u043F\\u0438\\u0441\\u043E\\u043A \\u0434\\u0435\\u043B\",\n      remove: removePost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        fontFamily: 'sans-serif',\n        textAlign: 'center'\n      },\n      children: \"\\u0414\\u0435\\u043B \\u043D\\u0435\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n_s(App, \"OtaRyBWIUM7ZQdBCDaRGno6Oo0Y=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","PostList","PostForm","Login","jsxDEV","_jsxDEV","App","_s","posts","setPosts","user","setUser","getPosts","SavedPosts","userKey","login","localStorage","getItem","JSON","parse","console","log","savePosts","setItem","stringify","createPost","newPost","title","body","clear","removePost","post","filter","p","id","WrongPassword","alert","className","children","AccessAllowed","AccessRestricted","onLogin","fileName","_jsxFileName","lineNumber","columnNumber","create","length","remove","style","fontFamily","textAlign","_c","$RefreshReg$"],"sources":["D:/site/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useEffect } from 'react';\r\nimport \"./styles/app.css\"\r\nimport PostList from './components/PostList';\r\nimport PostForm from './components/PostForm';\r\nimport Login from './components/Login';\r\n\r\nfunction App() {\r\n\r\n    const [posts, setPosts] = useState([]);\r\n    const [user, setUser] = useState(null);\r\n\r\n    const getPosts = (user) => {\r\n        var SavedPosts = null;\r\n        if(user) {\r\n            const userKey = `userData_${user.login}`;\r\n            SavedPosts = localStorage.getItem(user); // берем элемент из стораж\r\n        }\r\n        if (SavedPosts) {\r\n            setPosts(JSON.parse(SavedPosts)); // парсим в строку все объекты\r\n            console.log(\"ЕСТЬ ПОСТЫ \"+SavedPosts);\r\n        }\r\n        else {\r\n            setPosts([]);\r\n            console.log(\"НЕТ ПОСТОВ \"+SavedPosts);\r\n        }\r\n    }\r\n\r\n    const savePosts = (posts) => {\r\n        console.log(user);\r\n        if(user) {\r\n            const userKey = `userData_${user.login}`;\r\n            localStorage.setItem(user, JSON.stringify(posts)); // кладем элемент в стораж\r\n            console.log(user);\r\n        }\r\n        else\r\n            console.log(\"emptyuser\");\r\n    }\r\n\r\n    const createPost = (newPost) => {\r\n        if (newPost.title !== '' && newPost.body !== '') { \r\n            setPosts([...posts, newPost]) // задаем все элементы\r\n            savePosts([...posts, newPost]); // сохраняем все и последний\r\n            console.log(posts);\r\n        }\r\n        localStorage.clear();\r\n    }\r\n\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter(p => p.id !== post.id)); // задаем\r\n        savePosts(posts.filter(p => p.id !== post.id)); // сохраняем\r\n    }\r\n\r\n    const WrongPassword = () => {\r\n        alert('Неправильный пароль');\r\n    }\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            { \r\n            <Login AccessAllowed={getPosts} AccessRestricted={WrongPassword} onLogin={(user) => setUser(user)}/>\r\n            }\r\n            <PostForm create={createPost} />\r\n            {\r\n                posts.length !== 0\r\n                ?\r\n                <PostList posts={posts} title=\"Список дел\" remove={removePost} />\r\n                :\r\n                <h1 style={{ fontFamily: 'sans-serif', textAlign: 'center' }}>\r\n                    Дел нет\r\n                </h1>\r\n            }\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}